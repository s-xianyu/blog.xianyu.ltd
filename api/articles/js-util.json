{"title":"JS工具函数-转载","uid":"5d91f091b751e7ba7fe059e9f623df0f","slug":"js-util","date":"2019-07-02T15:50:34.000Z","updated":"2023-08-29T03:43:55.131Z","comments":true,"path":"api/articles/js-util.json","keywords":null,"cover":null,"content":"<h1 id=\"JS工具函数-转载\"><a href=\"#JS工具函数-转载\" class=\"headerlink\" title=\"JS工具函数-转载\"></a>JS工具函数-转载</h1><h2 id=\"1、isStatic：检测数据是不是除了symbol外的原始数据\"><a href=\"#1、isStatic：检测数据是不是除了symbol外的原始数据\" class=\"headerlink\" title=\"1、isStatic：检测数据是不是除了symbol外的原始数据\"></a>1、isStatic：检测数据是不是除了symbol外的原始数据</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isStatic</span>(<span class=\"params\">value</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span>(      </span><br><span class=\"line\">    <span class=\"keyword\">typeof</span> value === <span class=\"string\">&#x27;string&#x27;</span> || </span><br><span class=\"line\">    <span class=\"keyword\">typeof</span> value === <span class=\"string\">&#x27;number&#x27;</span> ||   </span><br><span class=\"line\">    <span class=\"keyword\">typeof</span> value === <span class=\"string\">&#x27;boolean&#x27;</span> ||  </span><br><span class=\"line\">    <span class=\"keyword\">typeof</span> value === <span class=\"string\">&#x27;undefined&#x27;</span> ||  </span><br><span class=\"line\">    value === <span class=\"literal\">null</span>   </span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n<h2 id=\"2、isPrimitive：检测数据是不是原始数据\"><a href=\"#2、isPrimitive：检测数据是不是原始数据\" class=\"headerlink\" title=\"2、isPrimitive：检测数据是不是原始数据\"></a><strong>2、isPrimitive：检测数据是不是原始数据</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isPrimitive</span>(<span class=\"params\">value</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">isStatic</span>(value) || <span class=\"keyword\">typeof</span> value === <span class=\"string\">&#x27;symbol&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"3、isObject：判断数据是不是引用类型的数据-例如：-arrays-functions-objects-regexes-new-Number-0-以及-new-String-‘’\"><a href=\"#3、isObject：判断数据是不是引用类型的数据-例如：-arrays-functions-objects-regexes-new-Number-0-以及-new-String-‘’\" class=\"headerlink\" title=\"3、isObject：判断数据是不是引用类型的数据 (例如： arrays, functions, objects, regexes, new Number(0),以及 new String(‘’))\"></a><strong>3、isObject：判断数据是不是引用类型的数据 (例如： arrays, functions, objects, regexes, new Number(0),以及 new String(‘’))</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isObject</span>(<span class=\"params\">value</span>) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">let</span> type = <span class=\"keyword\">typeof</span> value;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> value != <span class=\"literal\">null</span> &amp;&amp; (type == <span class=\"string\">&#x27;object&#x27;</span> || type == <span class=\"string\">&#x27;function&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"4、isObjectLike：检查-value-是否是-类对象。-如果一个值是类对象，那么它不应该是-null，而且-typeof-后的结果是-“object”\"><a href=\"#4、isObjectLike：检查-value-是否是-类对象。-如果一个值是类对象，那么它不应该是-null，而且-typeof-后的结果是-“object”\" class=\"headerlink\" title=\"4、isObjectLike：检查 value 是否是 类对象。 如果一个值是类对象，那么它不应该是 null，而且 typeof 后的结果是 “object”\"></a><strong>4、isObjectLike：检查 value 是否是 类对象。 如果一个值是类对象，那么它不应该是 null，而且 typeof 后的结果是 “object”</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isObjectLike</span>(<span class=\"params\">value</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> value != <span class=\"literal\">null</span> &amp;&amp; <span class=\"keyword\">typeof</span> value == <span class=\"string\">&#x27;object&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5、getRawType：获取数据类型，返回结果为-Number、String、Object、Array等\"><a href=\"#5、getRawType：获取数据类型，返回结果为-Number、String、Object、Array等\" class=\"headerlink\" title=\"5、getRawType：获取数据类型，返回结果为 Number、String、Object、Array等\"></a><strong>5、getRawType：获取数据类型，返回结果为 Number、String、Object、Array等</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getRawType</span>(<span class=\"params\">value</span>) &#123;    <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value).<span class=\"title function_\">slice</span>(<span class=\"number\">8</span>, -<span class=\"number\">1</span>)&#125;<span class=\"comment\">//getoRawType([]) ==&gt; Array</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"6、isPlainObject：判断数据是不是Object类型的数据\"><a href=\"#6、isPlainObject：判断数据是不是Object类型的数据\" class=\"headerlink\" title=\"6、isPlainObject：判断数据是不是Object类型的数据\"></a><strong>6、isPlainObject：判断数据是不是Object类型的数据</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isPlainObject</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(obj) === <span class=\"string\">&#x27;[object Object]&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"7、isArray：判断数据是不是数组类型的数据\"><a href=\"#7、isArray：判断数据是不是数组类型的数据\" class=\"headerlink\" title=\"7、isArray：判断数据是不是数组类型的数据\"></a><strong>7、isArray：判断数据是不是数组类型的数据</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isArray</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(arr) === <span class=\"string\">&#x27;[object Array]&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将isArray挂载到Array上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\">isArray</span> = <span class=\"title class_\">Array</span>.<span class=\"property\">isArray</span> || isArray;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"8、isRegExp：判断数据是不是正则对象\"><a href=\"#8、isRegExp：判断数据是不是正则对象\" class=\"headerlink\" title=\"8、isRegExp：判断数据是不是正则对象\"></a><strong>8、isRegExp：判断数据是不是正则对象</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isRegExp</span>(<span class=\"params\">value</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value) === <span class=\"string\">&#x27;[object RegExp]&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"9、isDate：判断数据是不是时间对象\"><a href=\"#9、isDate：判断数据是不是时间对象\" class=\"headerlink\" title=\"9、isDate：判断数据是不是时间对象\"></a><strong>9、isDate：判断数据是不是时间对象</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isDate</span>(<span class=\"params\">value</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value) === <span class=\"string\">&#x27;[object Date]&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"10、isNative：判断-value-是不是浏览器内置函数\"><a href=\"#10、isNative：判断-value-是不是浏览器内置函数\" class=\"headerlink\" title=\"10、isNative：判断 value 是不是浏览器内置函数\"></a><strong>10、isNative：判断 value 是不是浏览器内置函数</strong></h2><p>内置函数toString后的主体代码块为 [native code] ，而非内置函数则为相关代码，所以非内置函数可以进行拷贝(toString后掐头去尾再由Function转)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isNative</span>(<span class=\"params\">value</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> value === <span class=\"string\">&#x27;function&#x27;</span> &amp;&amp; <span class=\"regexp\">/native code/</span>.<span class=\"title function_\">test</span>(value.<span class=\"title function_\">toString</span>())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"11、isFunction：检查-value-是不是函数\"><a href=\"#11、isFunction：检查-value-是不是函数\" class=\"headerlink\" title=\"11、isFunction：检查 value 是不是函数\"></a><strong>11、isFunction：检查 value 是不是函数</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isFunction</span>(<span class=\"params\">value</span>) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span>.<span class=\"title function_\">call</span>(value) === <span class=\"string\">&#x27;[object Function]&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"12、isLength：检查-value-是否为有效的类数组长度\"><a href=\"#12、isLength：检查-value-是否为有效的类数组长度\" class=\"headerlink\" title=\"12、isLength：检查 value 是否为有效的类数组长度\"></a><strong>12、isLength：检查 value 是否为有效的类数组长度</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isLength</span>(<span class=\"params\">value</span>) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> value == <span class=\"string\">&#x27;number&#x27;</span> &amp;&amp;</span><br><span class=\"line\">    value &gt; -<span class=\"number\">1</span> &amp;&amp; value % <span class=\"number\">1</span> == <span class=\"number\">0</span> &amp;&amp; value &lt;= <span class=\"title class_\">Number</span>.<span class=\"property\">MAX_SAFE_INTEGER</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"13、isArrayLike：检查-value-是否是类数组\"><a href=\"#13、isArrayLike：检查-value-是否是类数组\" class=\"headerlink\" title=\"13、isArrayLike：检查 value 是否是类数组\"></a><strong>13、isArrayLike：检查 value 是否是类数组</strong></h2><p>如果一个值被认为是类数组，那么它不是一个函数，并且value.length是个整数，大于等于 0，小于或等于 Number.MAX_SAFE_INTEGER。这里字符串也将被当作类数组。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isArrayLike</span>(<span class=\"params\">value</span>) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> value != <span class=\"literal\">null</span> &amp;&amp; <span class=\"title function_\">isLength</span>(value.<span class=\"property\">length</span>) &amp;&amp; !<span class=\"title function_\">isFunction</span>(value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"14、isEmpty：检查-value-是否为空\"><a href=\"#14、isEmpty：检查-value-是否为空\" class=\"headerlink\" title=\"14、isEmpty：检查 value 是否为空\"></a><strong>14、isEmpty：检查 value 是否为空</strong></h2><p>如果是null，直接返回true；如果是类数组，判断数据长度；如果是Object对象，判断是否具有属性；如果是其他数据，直接返回false(也可改为返回true)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isEmpty</span>(<span class=\"params\">value</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">isArrayLike</span>(value)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !value.<span class=\"property\">length</span>;  </span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"title function_\">isPlainObject</span>(value))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> value) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (hasOwnProperty.<span class=\"title function_\">call</span>(value, key)) &#123;   </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;       </span><br><span class=\"line\">      &#125;    </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"15、cached：记忆函数：缓存函数的运算结果\"><a href=\"#15、cached：记忆函数：缓存函数的运算结果\" class=\"headerlink\" title=\"15、cached：记忆函数：缓存函数的运算结果\"></a><strong>15、cached：记忆函数：缓存函数的运算结果</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">cached</span>(<span class=\"params\">fn</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">let</span> cache = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>); </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"title function_\">cachedFn</span>(<span class=\"params\">str</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">let</span> hit = cache[str];  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> hit || (cache[str] = <span class=\"title function_\">fn</span>(str))  </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<br />\n\n<h2 id=\"16、camelize：横线转驼峰命名\"><a href=\"#16、camelize：横线转驼峰命名\" class=\"headerlink\" title=\"16、camelize：横线转驼峰命名\"></a><strong>16、camelize：横线转驼峰命名</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> camelizeRE = <span class=\"regexp\">/-(\\w)/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">camelize</span>(<span class=\"params\">str</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.<span class=\"title function_\">replace</span>(camelizeRE, <span class=\"keyword\">function</span>(<span class=\"params\">_, c</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> c ? c.<span class=\"title function_\">toUpperCase</span>() : <span class=\"string\">&#x27;&#x27;</span>;    </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//ab-cd-ef ==&gt; abCdEf//使用记忆函数let _camelize = cached(camelize)</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"17、hyphenate：驼峰命名转横线命名：拆分字符串，使用-相连，并且转换为小写\"><a href=\"#17、hyphenate：驼峰命名转横线命名：拆分字符串，使用-相连，并且转换为小写\" class=\"headerlink\" title=\"17、hyphenate：驼峰命名转横线命名：拆分字符串，使用 - 相连，并且转换为小写\"></a><strong>17、hyphenate：驼峰命名转横线命名：拆分字符串，使用 - 相连，并且转换为小写</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> hyphenateRE = <span class=\"regexp\">/\\B([A-Z])/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">hyphenate</span>(<span class=\"params\">str</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.<span class=\"title function_\">replace</span>(hyphenateRE, <span class=\"string\">&#x27;-$1&#x27;</span>).<span class=\"title function_\">toLowerCase</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//abCd ==&gt; ab-cd//使用记忆函数let _hyphenate = cached(hyphenate);</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"18、capitalize：字符串首位大写\"><a href=\"#18、capitalize：字符串首位大写\" class=\"headerlink\" title=\"18、capitalize：字符串首位大写\"></a><strong>18、capitalize：字符串首位大写</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">capitalize</span>(<span class=\"params\">str</span>)&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.<span class=\"title function_\">charAt</span>(<span class=\"number\">0</span>).<span class=\"title function_\">toUpperCase</span>() + str.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// abc ==&gt; Abc//使用记忆函数let _capitalize = cached(capitalize)</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"19、extend：将属性混合到目标对象中\"><a href=\"#19、extend：将属性混合到目标对象中\" class=\"headerlink\" title=\"19、extend：将属性混合到目标对象中\"></a><strong>19、extend：将属性混合到目标对象中</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">extend</span>(<span class=\"params\">to, _from</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> _from) &#123;  </span><br><span class=\"line\">    to[key] = _from[key];   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">return</span> to</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"20、Object-assign：对象属性复制，浅拷贝\"><a href=\"#20、Object-assign：对象属性复制，浅拷贝\" class=\"headerlink\" title=\"20、Object.assign：对象属性复制，浅拷贝\"></a><strong>20、Object.assign：对象属性复制，浅拷贝</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\">assign</span> = <span class=\"title class_\">Object</span>.<span class=\"property\">assign</span> || <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span> == <span class=\"number\">0</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TypeError</span>(<span class=\"string\">&#x27;Cannot convert undefined or null to object&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> target = <span class=\"variable language_\">arguments</span>[<span class=\"number\">0</span>],  </span><br><span class=\"line\">      args = <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">arguments</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">      key   </span><br><span class=\"line\">  args.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">item</span>)&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(key <span class=\"keyword\">in</span> item)&#123;    </span><br><span class=\"line\">      item.<span class=\"title function_\">hasOwnProperty</span>(key) &amp;&amp; ( target[key] = item[key] ) </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  &#125;)  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> target</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用Object.assign可以浅克隆一个对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clone = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, target)</span><br></pre></td></tr></table></figure>\n<p>简单的深克隆可以使用JSON.parse()和JSON.stringify()，这两个api是解析json数据的，所以只能解析除symbol外的原始类型及数组和对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clone = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>( <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(target) )</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"21、clone：克隆数据，可深度克隆\"><a href=\"#21、clone：克隆数据，可深度克隆\" class=\"headerlink\" title=\"21、clone：克隆数据，可深度克隆\"></a><strong>21、clone：克隆数据，可深度克隆</strong></h2><p>这里列出了原始类型，时间、正则、错误、数组、对象的克隆规则，其他的可自行补充<br /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">clone</span>(<span class=\"params\">value, deep</span>)&#123; </span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"title function_\">isPrimitive</span>(value))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value   </span><br><span class=\"line\">  &#125;        </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">isArrayLike</span>(value)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//是类数组  </span></span><br><span class=\"line\">    value = <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">slice</span>.<span class=\"title function_\">call</span>(value)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> deep ? <span class=\"title function_\">clone</span>(item, deep) : item)  </span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"title function_\">isPlainObject</span>(value))&#123;</span><br><span class=\"line\">    <span class=\"comment\">//是对象          </span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> target = &#123;&#125;, key; </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> value) &#123; </span><br><span class=\"line\">      value.<span class=\"title function_\">hasOwnProperty</span>(key) &amp;&amp; ( target[key] = deep ? <span class=\"title function_\">clone</span>(value[key], deep) : value[key] )   </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">let</span> type = <span class=\"title function_\">getRawType</span>(value)  </span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(type)&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;Date&#x27;</span>:   </span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;RegExp&#x27;</span>:  </span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;Error&#x27;</span>:</span><br><span class=\"line\">      value = <span class=\"keyword\">new</span> <span class=\"variable language_\">window</span>[type](value); </span><br><span class=\"line\">      <span class=\"keyword\">break</span>;   </span><br><span class=\"line\">  &#125;    </span><br><span class=\"line\">  <span class=\"keyword\">return</span> value</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"22、识别各种浏览器及平台\"><a href=\"#22、识别各种浏览器及平台\" class=\"headerlink\" title=\"22、识别各种浏览器及平台\"></a><strong>22、识别各种浏览器及平台</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//运行环境是浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> inBrowser = <span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span> !== <span class=\"string\">&#x27;undefined&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">//运行环境是微信</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> inWeex = <span class=\"keyword\">typeof</span> <span class=\"title class_\">WXEnvironment</span> !== <span class=\"string\">&#x27;undefined&#x27;</span> &amp;&amp; !!<span class=\"title class_\">WXEnvironment</span>.<span class=\"property\">platform</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> weexPlatform = inWeex &amp;&amp; <span class=\"title class_\">WXEnvironment</span>.<span class=\"property\">platform</span>.<span class=\"title function_\">toLowerCase</span>();</span><br><span class=\"line\"><span class=\"comment\">//浏览器 UA 判断</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable constant_\">UA</span> = inBrowser &amp;&amp; <span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">userAgent</span>.<span class=\"title function_\">toLowerCase</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> isIE = <span class=\"variable constant_\">UA</span> &amp;&amp; <span class=\"regexp\">/msie|trident/</span>.<span class=\"title function_\">test</span>(<span class=\"variable constant_\">UA</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> isIE9 = <span class=\"variable constant_\">UA</span> &amp;&amp; <span class=\"variable constant_\">UA</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;msie 9.0&#x27;</span>) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> isEdge = <span class=\"variable constant_\">UA</span> &amp;&amp; <span class=\"variable constant_\">UA</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;edge/&#x27;</span>) &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> isAndroid = (<span class=\"variable constant_\">UA</span> &amp;&amp; <span class=\"variable constant_\">UA</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;android&#x27;</span>) &gt; <span class=\"number\">0</span>) || (weexPlatform === <span class=\"string\">&#x27;android&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> isIOS = (<span class=\"variable constant_\">UA</span> &amp;&amp; <span class=\"regexp\">/iphone|ipad|ipod|ios/</span>.<span class=\"title function_\">test</span>(<span class=\"variable constant_\">UA</span>)) || (weexPlatform === <span class=\"string\">&#x27;ios&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> isChrome = <span class=\"variable constant_\">UA</span> &amp;&amp; <span class=\"regexp\">/chrome\\/\\d+/</span>.<span class=\"title function_\">test</span>(<span class=\"variable constant_\">UA</span>) &amp;&amp; !isEdge;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"23、getExplorerInfo：获取浏览器信息\"><a href=\"#23、getExplorerInfo：获取浏览器信息\" class=\"headerlink\" title=\"23、getExplorerInfo：获取浏览器信息\"></a><strong>23、getExplorerInfo：获取浏览器信息</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getExplorerInfo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> t = navigator.<span class=\"property\">userAgent</span>.<span class=\"title function_\">toLowerCase</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span> &lt;= t.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;msie&quot;</span>) ? &#123; <span class=\"comment\">//ie &lt; 11</span></span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;IE&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"title class_\">Number</span>(t.<span class=\"title function_\">match</span>(<span class=\"regexp\">/msie ([\\d]+)/</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125; : !!t.<span class=\"title function_\">match</span>(<span class=\"regexp\">/trident\\/.+?rv:(([\\d.]+))/</span>) ? &#123; <span class=\"comment\">// ie 11</span></span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;IE&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"number\">11</span></span><br><span class=\"line\">    &#125; : <span class=\"number\">0</span> &lt;= t.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;edge&quot;</span>) ? &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;Edge&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"title class_\">Number</span>(t.<span class=\"title function_\">match</span>(<span class=\"regexp\">/edge\\/([\\d]+)/</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125; : <span class=\"number\">0</span> &lt;= t.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;firefox&quot;</span>) ? &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;Firefox&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"title class_\">Number</span>(t.<span class=\"title function_\">match</span>(<span class=\"regexp\">/firefox\\/([\\d]+)/</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125; : <span class=\"number\">0</span> &lt;= t.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;chrome&quot;</span>) ? &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;Chrome&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"title class_\">Number</span>(t.<span class=\"title function_\">match</span>(<span class=\"regexp\">/chrome\\/([\\d]+)/</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125; : <span class=\"number\">0</span> &lt;= t.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;opera&quot;</span>) ? &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;Opera&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"title class_\">Number</span>(t.<span class=\"title function_\">match</span>(<span class=\"regexp\">/opera.([\\d]+)/</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125; : <span class=\"number\">0</span> &lt;= t.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Safari&quot;</span>) ? &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;Safari&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: <span class=\"title class_\">Number</span>(t.<span class=\"title function_\">match</span>(<span class=\"regexp\">/version\\/([\\d]+)/</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    &#125; : &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: t,</span><br><span class=\"line\">        <span class=\"attr\">version</span>: -<span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"24、isPCBroswer：检测是否为PC端浏览器模式\"><a href=\"#24、isPCBroswer：检测是否为PC端浏览器模式\" class=\"headerlink\" title=\"24、isPCBroswer：检测是否为PC端浏览器模式\"></a><strong>24、isPCBroswer：检测是否为PC端浏览器模式</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isPCBroswer</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> e = navigator.<span class=\"property\">userAgent</span>.<span class=\"title function_\">toLowerCase</span>()</span><br><span class=\"line\">        , t = <span class=\"string\">&quot;ipad&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ipad/i</span>)</span><br><span class=\"line\">        , i = <span class=\"string\">&quot;iphone&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/iphone/i</span>)</span><br><span class=\"line\">        , r = <span class=\"string\">&quot;midp&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/midp/i</span>)</span><br><span class=\"line\">        , n = <span class=\"string\">&quot;rv:1.2.3.4&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/rv:1.2.3.4/i</span>)</span><br><span class=\"line\">        , a = <span class=\"string\">&quot;ucweb&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/ucweb/i</span>)</span><br><span class=\"line\">        , o = <span class=\"string\">&quot;android&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/android/i</span>)</span><br><span class=\"line\">        , s = <span class=\"string\">&quot;windows ce&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/windows ce/i</span>)</span><br><span class=\"line\">        , l = <span class=\"string\">&quot;windows mobile&quot;</span> == e.<span class=\"title function_\">match</span>(<span class=\"regexp\">/windows mobile/i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(t || i || r || n || a || o || s || l)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"25、unique：数组去重，返回一个新数组\"><a href=\"#25、unique：数组去重，返回一个新数组\" class=\"headerlink\" title=\"25、unique：数组去重，返回一个新数组\"></a><strong>25、unique：数组去重，返回一个新数组</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">unique</span>(<span class=\"params\">arr</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_\">isArrayLink</span>(arr))&#123; <span class=\"comment\">//不是类数组对象</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> objarr = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    arr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_\">isStatic</span>(item))&#123;<span class=\"comment\">//是除了symbol外的原始数据</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> key = item + <span class=\"string\">&#x27;_&#x27;</span> + <span class=\"title function_\">getRawType</span>(item);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!obj[key])&#123;</span><br><span class=\"line\">                obj[key] = <span class=\"literal\">true</span></span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(item)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//引用类型及symbol</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!objarr.<span class=\"title function_\">includes</span>(item))&#123;</span><br><span class=\"line\">                objarr.<span class=\"title function_\">push</span>(item)</span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(item)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> resulte</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"26、Set简单实现\"><a href=\"#26、Set简单实现\" class=\"headerlink\" title=\"26、Set简单实现\"></a><strong>26、Set简单实现</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">Set</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">Set</span> || (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">Set</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = arr ? <span class=\"title function_\">unique</span>(arr) : [];</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"property\">length</span>; <span class=\"comment\">// Array的大小</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">Set</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">add</span>: <span class=\"keyword\">function</span> (<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 添加元素,若元素已存在,则跳过，返回 Set 结构本身。</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">has</span>(value)) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">push</span>(value);</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">size</span>++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">clear</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//清除所有成员，没有返回值。</span></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">items</span> = []</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">delete</span>: <span class=\"keyword\">function</span> (<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//删除某个值，返回一个布尔值，表示删除是否成功。</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">some</span>(<span class=\"function\">(<span class=\"params\">v, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(v === value)&#123;</span><br><span class=\"line\">                    <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">splice</span>(i,<span class=\"number\">1</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">has</span>: <span class=\"keyword\">function</span> (<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//返回一个布尔值，表示该值是否为Set的成员。</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span>.<span class=\"title function_\">some</span>(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> v === value)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">values</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">items</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Set</span>;</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"27、repeat：生成一个重复的字符串，有n个str组成，可修改为填充为数组等\"><a href=\"#27、repeat：生成一个重复的字符串，有n个str组成，可修改为填充为数组等\" class=\"headerlink\" title=\"27、repeat：生成一个重复的字符串，有n个str组成，可修改为填充为数组等\"></a><strong>27、repeat：生成一个重复的字符串，有n个str组成，可修改为填充为数组等</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">repeat</span>(<span class=\"params\">str, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            res += str;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            str += str;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//repeat(&#x27;123&#x27;,3) ==&gt; 123123123</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"28、dateFormater：格式化时间\"><a href=\"#28、dateFormater：格式化时间\" class=\"headerlink\" title=\"28、dateFormater：格式化时间\"></a><strong>28、dateFormater：格式化时间</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dateFormater</span>(<span class=\"params\">formater, t</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> date = t ? <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(t) : <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(),</span><br><span class=\"line\">        Y = date.<span class=\"title function_\">getFullYear</span>() + <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        M = date.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span>,</span><br><span class=\"line\">        D = date.<span class=\"title function_\">getDate</span>(),</span><br><span class=\"line\">        H = date.<span class=\"title function_\">getHours</span>(),</span><br><span class=\"line\">        m = date.<span class=\"title function_\">getMinutes</span>(),</span><br><span class=\"line\">        s = date.<span class=\"title function_\">getSeconds</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> formater.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/YYYY|yyyy/g</span>,Y)</span><br><span class=\"line\">        .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/YY|yy/g</span>,Y.<span class=\"title function_\">substr</span>(<span class=\"number\">2</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">        .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/MM/g</span>,(M&lt;<span class=\"number\">10</span>?<span class=\"string\">&#x27;0&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>) + M)</span><br><span class=\"line\">        .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/DD/g</span>,(D&lt;<span class=\"number\">10</span>?<span class=\"string\">&#x27;0&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>) + D)</span><br><span class=\"line\">        .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/HH|hh/g</span>,(H&lt;<span class=\"number\">10</span>?<span class=\"string\">&#x27;0&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>) + H)</span><br><span class=\"line\">        .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/mm/g</span>,(m&lt;<span class=\"number\">10</span>?<span class=\"string\">&#x27;0&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>) + m)</span><br><span class=\"line\">        .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/ss/g</span>,(s&lt;<span class=\"number\">10</span>?<span class=\"string\">&#x27;0&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>) + s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// dateFormater(&#x27;YYYY-MM-DD HH:mm&#x27;, t) ==&gt; 2019-06-26 18:30</span></span><br><span class=\"line\"><span class=\"comment\">// dateFormater(&#x27;YYYYMMDDHHmm&#x27;, t) ==&gt; 201906261830</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"29、dateStrForma：将指定字符串由一种时间格式转化为另一种\"><a href=\"#29、dateStrForma：将指定字符串由一种时间格式转化为另一种\" class=\"headerlink\" title=\"29、dateStrForma：将指定字符串由一种时间格式转化为另一种\"></a><strong>29、dateStrForma：将指定字符串由一种时间格式转化为另一种</strong></h2><p>from的格式应对应str的位置<br /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dateStrForma</span>(<span class=\"params\">str, <span class=\"keyword\">from</span>, to</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//&#x27;20190626&#x27; &#x27;YYYYMMDD&#x27; &#x27;YYYY年MM月DD日&#x27;</span></span><br><span class=\"line\">    str += <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> Y = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(~(Y = <span class=\"keyword\">from</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;YYYY&#x27;</span>)))&#123;</span><br><span class=\"line\">        Y = str.<span class=\"title function_\">substr</span>(Y, <span class=\"number\">4</span>)</span><br><span class=\"line\">        to = to.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/YYYY|yyyy/g</span>,Y)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(~(Y = <span class=\"keyword\">from</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;YY&#x27;</span>)))&#123;</span><br><span class=\"line\">        Y = str.<span class=\"title function_\">substr</span>(Y, <span class=\"number\">2</span>)</span><br><span class=\"line\">        to = to.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/YY|yy/g</span>,Y)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> k,i</span><br><span class=\"line\">    [<span class=\"string\">&#x27;M&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>,<span class=\"string\">&#x27;H&#x27;</span>,<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"string\">&#x27;m&#x27;</span>,<span class=\"string\">&#x27;s&#x27;</span>].<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">s</span> =&gt;</span>&#123;</span><br><span class=\"line\">        i = <span class=\"keyword\">from</span>.<span class=\"title function_\">indexOf</span>(s+s)</span><br><span class=\"line\">        k = ~i ? str.<span class=\"title function_\">substr</span>(i, <span class=\"number\">2</span>) : <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        to = to.<span class=\"title function_\">replace</span>(s+s, k)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> to</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// dateStrForma(&#x27;20190626&#x27;, &#x27;YYYYMMDD&#x27;, &#x27;YYYY年MM月DD日&#x27;) ==&gt; 2019年06月26日</span></span><br><span class=\"line\"><span class=\"comment\">// dateStrForma(&#x27;121220190626&#x27;, &#x27;----YYYYMMDD&#x27;, &#x27;YYYY年MM月DD日&#x27;) ==&gt; 2019年06月26日</span></span><br><span class=\"line\"><span class=\"comment\">// dateStrForma(&#x27;2019年06月26日&#x27;, &#x27;YYYY年MM月DD日&#x27;, &#x27;YYYYMMDD&#x27;) ==&gt; 20190626</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一般的也可以使用正则来实现</span></span><br><span class=\"line\"><span class=\"comment\">//&#x27;2019年06月26日&#x27;.replace(/(\\d&#123;4&#125;)年(\\d&#123;2&#125;)月(\\d&#123;2&#125;)日/, &#x27;$1-$2-$3&#x27;) ==&gt; 2019-06-26</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"30、getPropByPath：根据字符串路径获取对象属性-‘obj-0-count’\"><a href=\"#30、getPropByPath：根据字符串路径获取对象属性-‘obj-0-count’\" class=\"headerlink\" title=\"30、getPropByPath：根据字符串路径获取对象属性 : ‘obj[0].count’\"></a><strong>30、getPropByPath：根据字符串路径获取对象属性 : ‘obj[0].count’</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPropByPath</span>(<span class=\"params\">obj, path, strict</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> tempObj = obj;</span><br><span class=\"line\">      path = path.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\[(\\w+)\\]/g</span>, <span class=\"string\">&#x27;.$1&#x27;</span>); <span class=\"comment\">//将[0]转化为.0</span></span><br><span class=\"line\">      path = path.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^\\./</span>, <span class=\"string\">&#x27;&#x27;</span>); <span class=\"comment\">//去除开头的.</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">let</span> keyArr = path.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;.&#x27;</span>); <span class=\"comment\">//根据.切割</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> len = keyArr.<span class=\"property\">length</span>; i &lt; len - <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!tempObj &amp;&amp; !strict) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> key = keyArr[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key <span class=\"keyword\">in</span> tempObj) &#123;</span><br><span class=\"line\">            tempObj = tempObj[key];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (strict) &#123;<span class=\"comment\">//开启严格模式，没找到对应key值，抛出错误</span></span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;please transfer a valid prop path to form item!&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">o</span>: tempObj, <span class=\"comment\">//原始数据</span></span><br><span class=\"line\">        <span class=\"attr\">k</span>: keyArr[i], <span class=\"comment\">//key值</span></span><br><span class=\"line\">        <span class=\"attr\">v</span>: tempObj ? tempObj[keyArr[i]] : <span class=\"literal\">null</span> <span class=\"comment\">// key值对应的值</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"31、GetUrlParam：获取Url参数，返回一个对象\"><a href=\"#31、GetUrlParam：获取Url参数，返回一个对象\" class=\"headerlink\" title=\"31、GetUrlParam：获取Url参数，返回一个对象\"></a><strong>31、GetUrlParam：获取Url参数，返回一个对象</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">GetUrlParam</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> url = <span class=\"variable language_\">document</span>.<span class=\"property\">location</span>.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arrObj = url.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;?&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> params = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arrObj.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        arrObj = arrObj[<span class=\"number\">1</span>].<span class=\"title function_\">split</span>(<span class=\"string\">&quot;&amp;&quot;</span>);</span><br><span class=\"line\">        arrObj.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">            item = item.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;=&quot;</span>);</span><br><span class=\"line\">            params[item[<span class=\"number\">0</span>]] = item[<span class=\"number\">1</span>]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> params;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ?a=1&amp;b=2&amp;c=3 ==&gt; &#123;a: &quot;1&quot;, b: &quot;2&quot;, c: &quot;3&quot;&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"32、downloadFile：base64数据导出文件，文件下载\"><a href=\"#32、downloadFile：base64数据导出文件，文件下载\" class=\"headerlink\" title=\"32、downloadFile：base64数据导出文件，文件下载\"></a><strong>32、downloadFile：base64数据导出文件，文件下载</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">downloadFile</span>(<span class=\"params\">filename, data</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"title class_\">DownloadLink</span> = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"title class_\">DownloadLink</span> )&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(<span class=\"title class_\">DownloadLink</span>);</span><br><span class=\"line\">        <span class=\"title class_\">DownloadLink</span>.<span class=\"property\">style</span> = <span class=\"string\">&#x27;display: none&#x27;</span>;</span><br><span class=\"line\">        <span class=\"title class_\">DownloadLink</span>.<span class=\"property\">download</span> = filename;</span><br><span class=\"line\">        <span class=\"title class_\">DownloadLink</span>.<span class=\"property\">href</span> = data;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( <span class=\"variable language_\">document</span>.<span class=\"property\">createEvent</span> )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> <span class=\"title class_\">DownloadEvt</span> = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createEvent</span>(<span class=\"string\">&#x27;MouseEvents&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title class_\">DownloadEvt</span>.<span class=\"title function_\">initEvent</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">            <span class=\"title class_\">DownloadLink</span>.<span class=\"title function_\">dispatchEvent</span>(<span class=\"title class_\">DownloadEvt</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( <span class=\"variable language_\">document</span>.<span class=\"property\">createEventObject</span> )</span><br><span class=\"line\">            <span class=\"title class_\">DownloadLink</span>.<span class=\"title function_\">fireEvent</span>(<span class=\"string\">&#x27;onclick&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"title class_\">DownloadLink</span>.<span class=\"property\">onclick</span> == <span class=\"string\">&#x27;function&#x27;</span> )</span><br><span class=\"line\">            <span class=\"title class_\">DownloadLink</span>.<span class=\"title function_\">onclick</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(<span class=\"title class_\">DownloadLink</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<br />\n\n<h2 id=\"33、toFullScreen：全屏\"><a href=\"#33、toFullScreen：全屏\" class=\"headerlink\" title=\"33、toFullScreen：全屏\"></a><strong>33、toFullScreen：全屏</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">toFullScreen</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> elem = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">    elem.<span class=\"property\">webkitRequestFullScreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">webkitRequestFullScreen</span>()</span><br><span class=\"line\">    : elem.<span class=\"property\">mozRequestFullScreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">mozRequestFullScreen</span>()</span><br><span class=\"line\">    : elem.<span class=\"property\">msRequestFullscreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">msRequestFullscreen</span>()</span><br><span class=\"line\">    : elem.<span class=\"property\">requestFullScreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">requestFullScreen</span>()</span><br><span class=\"line\">    : <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;浏览器不支持全屏&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"34、exitFullscreen：退出全屏\"><a href=\"#34、exitFullscreen：退出全屏\" class=\"headerlink\" title=\"34、exitFullscreen：退出全屏\"></a><strong>34、exitFullscreen：退出全屏</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">exitFullscreen</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> elem = parent.<span class=\"property\">document</span>;</span><br><span class=\"line\">    elem.<span class=\"property\">webkitCancelFullScreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">webkitCancelFullScreen</span>()</span><br><span class=\"line\">    : elem.<span class=\"property\">mozCancelFullScreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">mozCancelFullScreen</span>()</span><br><span class=\"line\">    : elem.<span class=\"property\">cancelFullScreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">cancelFullScreen</span>()</span><br><span class=\"line\">    : elem.<span class=\"property\">msExitFullscreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">msExitFullscreen</span>()</span><br><span class=\"line\">    : elem.<span class=\"property\">exitFullscreen</span></span><br><span class=\"line\">    ? elem.<span class=\"title function_\">exitFullscreen</span>()</span><br><span class=\"line\">    : <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;切换失败,可尝试Esc退出&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"35、requestAnimationFrame：window动画\"><a href=\"#35、requestAnimationFrame：window动画\" class=\"headerlink\" title=\"35、requestAnimationFrame：window动画\"></a><strong>35、requestAnimationFrame：window动画</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">webkitRequestAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">mozRequestAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">msRequestAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">oRequestAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"keyword\">function</span> (<span class=\"params\">callback</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//为了使setTimteout的尽可能的接近每秒60帧的效果</span></span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"built_in\">setTimeout</span>(callback, <span class=\"number\">1000</span> / <span class=\"number\">60</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">cancelAnimationFrame</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">cancelAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"title class_\">Window</span>.<span class=\"property\">webkitCancelAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">mozCancelAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">msCancelAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">oCancelAnimationFrame</span> ||</span><br><span class=\"line\">    <span class=\"keyword\">function</span> (<span class=\"params\">id</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//为了使setTimteout的尽可能的接近每秒60帧的效果</span></span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"built_in\">clearTimeout</span>(id);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"36、-isNaN：检查数据是否是非数字值\"><a href=\"#36、-isNaN：检查数据是否是非数字值\" class=\"headerlink\" title=\"36、_isNaN：检查数据是否是非数字值\"></a><strong>36、_isNaN：检查数据是否是非数字值</strong></h2><p>原生的isNaN会把参数转换成数字(valueof)，而null、true、false以及长度小于等于1的数组(元素为非NaN数据)会被转换成数字，这不是我想要的。Symbol类型的数据不具有valueof接口，所以isNaN会抛出错误，这里放在后面，可避免错误<br /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_isNaN</span>(<span class=\"params\">v</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(<span class=\"keyword\">typeof</span> v === <span class=\"string\">&#x27;string&#x27;</span> || <span class=\"keyword\">typeof</span> v === <span class=\"string\">&#x27;number&#x27;</span>) || <span class=\"built_in\">isNaN</span>(v)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"37、max：求取数组中非NaN数据中的最大值\"><a href=\"#37、max：求取数组中非NaN数据中的最大值\" class=\"headerlink\" title=\"37、max：求取数组中非NaN数据中的最大值\"></a><strong>37、max：求取数组中非NaN数据中的最大值</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">max</span>(<span class=\"params\">arr</span>)&#123;</span><br><span class=\"line\">    arr = arr.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> !<span class=\"title function_\">_isNaN</span>(item))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"property\">length</span> ? <span class=\"title class_\">Math</span>.<span class=\"property\">max</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, arr) : <span class=\"literal\">undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//max([1, 2, &#x27;11&#x27;, null, &#x27;fdf&#x27;, []]) ==&gt; 11</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"38、min：求取数组中非NaN数据中的最小值\"><a href=\"#38、min：求取数组中非NaN数据中的最小值\" class=\"headerlink\" title=\"38、min：求取数组中非NaN数据中的最小值\"></a><strong>38、min：求取数组中非NaN数据中的最小值</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">min</span>(<span class=\"params\">arr</span>)&#123;</span><br><span class=\"line\">    arr = arr.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> !<span class=\"title function_\">_isNaN</span>(item))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"property\">length</span> ? <span class=\"title class_\">Math</span>.<span class=\"property\">min</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, arr) : <span class=\"literal\">undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//min([1, 2, &#x27;11&#x27;, null, &#x27;fdf&#x27;, []]) ==&gt; 1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"39、random：返回一个lower-upper之间的随机数\"><a href=\"#39、random：返回一个lower-upper之间的随机数\" class=\"headerlink\" title=\"39、random：返回一个lower - upper之间的随机数\"></a><strong>39、random：返回一个lower - upper之间的随机数</strong></h2><p>lower、upper无论正负与大小，但必须是非NaN的数据<br /></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">random</span>(<span class=\"params\">lower, upper</span>)&#123;</span><br><span class=\"line\">    lower = +lower || <span class=\"number\">0</span></span><br><span class=\"line\">    upper = +upper || <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * (upper - lower) + lower;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//random(0, 0.5) ==&gt; 0.3567039135734613</span></span><br><span class=\"line\"><span class=\"comment\">//random(2, 1) ===&gt; 1.6718418553475423</span></span><br><span class=\"line\"><span class=\"comment\">//random(-2, -1) ==&gt; -1.4474325452361945</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"40、Object-keys：返回一个由一个给定对象的自身可枚举属性组成的数组\"><a href=\"#40、Object-keys：返回一个由一个给定对象的自身可枚举属性组成的数组\" class=\"headerlink\" title=\"40、Object.keys：返回一个由一个给定对象的自身可枚举属性组成的数组\"></a><strong>40、Object.keys：返回一个由一个给定对象的自身可枚举属性组成的数组</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\">keys</span> = <span class=\"title class_\">Object</span>.<span class=\"property\">keys</span> || <span class=\"keyword\">function</span> <span class=\"title function_\">keys</span>(<span class=\"params\">object</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(object === <span class=\"literal\">null</span> || object === <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TypeError</span>(<span class=\"string\">&#x27;Cannot convert undefined or null to object&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_\">isArrayLike</span>(object) || <span class=\"title function_\">isPlainObject</span>(object))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">            object.<span class=\"title function_\">hasOwnProperty</span>(key) &amp;&amp; ( result.<span class=\"title function_\">push</span>(key) )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"41、Object-values：返回一个给定对象自身的所有可枚举属性值的数组\"><a href=\"#41、Object-values：返回一个给定对象自身的所有可枚举属性值的数组\" class=\"headerlink\" title=\"41、Object.values：返回一个给定对象自身的所有可枚举属性值的数组\"></a><strong>41、Object.values：返回一个给定对象自身的所有可枚举属性值的数组</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"property\">values</span> = <span class=\"title class_\">Object</span>.<span class=\"property\">values</span> || <span class=\"keyword\">function</span> <span class=\"title function_\">values</span>(<span class=\"params\">object</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(object === <span class=\"literal\">null</span> || object === <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TypeError</span>(<span class=\"string\">&#x27;Cannot convert undefined or null to object&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_\">isArrayLike</span>(object) || <span class=\"title function_\">isPlainObject</span>(object))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">            object.<span class=\"title function_\">hasOwnProperty</span>(key) &amp;&amp; ( result.<span class=\"title function_\">push</span>(object[key]) )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"42、arr-fill：使用-value-值来填充-array，从start位置开始-到end位置结束（但不包含end位置），返回原数组\"><a href=\"#42、arr-fill：使用-value-值来填充-array，从start位置开始-到end位置结束（但不包含end位置），返回原数组\" class=\"headerlink\" title=\"42、arr.fill：使用 value 值来填充 array，从start位置开始, 到end位置结束（但不包含end位置），返回原数组\"></a><strong>42、arr.fill：使用 value 值来填充 array，从start位置开始, 到end位置结束（但不包含end位置），返回原数组</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fill</span> = <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fill</span> || <span class=\"keyword\">function</span> <span class=\"title function_\">fill</span>(<span class=\"params\">value, start, end</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ctx = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = ctx.<span class=\"property\">length</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    start = <span class=\"built_in\">parseInt</span>(start)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">isNaN</span>(start))&#123;</span><br><span class=\"line\">        start = <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (start &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        start = -start &gt; length ? <span class=\"number\">0</span> : (length + start);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      end = <span class=\"built_in\">parseInt</span>(end)</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"built_in\">isNaN</span>(end) || end &gt; length)&#123;</span><br><span class=\"line\">          end = length</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (end &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        end += length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (start &lt; end) &#123;</span><br><span class=\"line\">        ctx[start++] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ctx;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//Array(3).fill(2) ===&gt; [2, 2, 2]</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"43、arr-includes：用来判断一个数组是否包含一个指定的值，如果是返回-true，否则false，可指定开始查询的位置\"><a href=\"#43、arr-includes：用来判断一个数组是否包含一个指定的值，如果是返回-true，否则false，可指定开始查询的位置\" class=\"headerlink\" title=\"43、arr.includes：用来判断一个数组是否包含一个指定的值，如果是返回 true，否则false，可指定开始查询的位置\"></a><strong>43、arr.includes：用来判断一个数组是否包含一个指定的值，如果是返回 true，否则false，可指定开始查询的位置</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">includes</span> = <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">includes</span> || <span class=\"keyword\">function</span> <span class=\"title function_\">includes</span>(<span class=\"params\">value, start</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ctx = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = ctx.<span class=\"property\">length</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    start = <span class=\"built_in\">parseInt</span>(start)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">isNaN</span>(start))&#123;</span><br><span class=\"line\">        start = <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (start &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        start = -start &gt; length ? <span class=\"number\">0</span> : (length + start);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = ctx.<span class=\"title function_\">indexOf</span>(value)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> index &gt;= start;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"44、arr-find：返回数组中通过测试（函数fn内判断）的第一个元素的值\"><a href=\"#44、arr-find：返回数组中通过测试（函数fn内判断）的第一个元素的值\" class=\"headerlink\" title=\"44、arr.find：返回数组中通过测试（函数fn内判断）的第一个元素的值\"></a><strong>44、arr.find：返回数组中通过测试（函数fn内判断）的第一个元素的值</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">find</span> = <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">find</span> || <span class=\"keyword\">function</span> <span class=\"title function_\">find</span>(<span class=\"params\">fn, ctx</span>)&#123;</span><br><span class=\"line\">    ctx = ctx || <span class=\"variable language_\">this</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> result;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">some</span>((value, index, arr), thisValue) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">fn</span>(value, index, arr) ? (result = value, <span class=\"literal\">true</span>) : <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"45、arr-findIndex-：返回数组中通过测试（函数fn内判断）的第一个元素的下标\"><a href=\"#45、arr-findIndex-：返回数组中通过测试（函数fn内判断）的第一个元素的下标\" class=\"headerlink\" title=\"45、arr.findIndex ：返回数组中通过测试（函数fn内判断）的第一个元素的下标\"></a><strong>45、arr.findIndex ：返回数组中通过测试（函数fn内判断）的第一个元素的下标</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">findIndex</span> = <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">findIndex</span> || <span class=\"keyword\">function</span> <span class=\"title function_\">findIndex</span>(<span class=\"params\">fn, ctx</span>)&#123;</span><br><span class=\"line\">    ctx = ctx || <span class=\"variable language_\">this</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> result;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">some</span>((value, index, arr), thisValue) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">fn</span>(value, index, arr) ? (result = index, <span class=\"literal\">true</span>) : <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"46、performance-timing：利用performance-timing进行性能分析\"><a href=\"#46、performance-timing：利用performance-timing进行性能分析\" class=\"headerlink\" title=\"46、performance.timing：利用performance.timing进行性能分析\"></a><strong>46、performance.timing：利用performance.timing进行性能分析</strong></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> t = performance.<span class=\"property\">timing</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;DNS查询耗时 ：&#x27;</span> + (t.<span class=\"property\">domainLookupEnd</span> - t.<span class=\"property\">domainLookupStart</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;TCP链接耗时 ：&#x27;</span> + (t.<span class=\"property\">connectEnd</span> - t.<span class=\"property\">connectStart</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;request请求耗时 ：&#x27;</span> + (t.<span class=\"property\">responseEnd</span> - t.<span class=\"property\">responseStart</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;解析dom树耗时 ：&#x27;</span> + (t.<span class=\"property\">domComplete</span> - t.<span class=\"property\">domInteractive</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;白屏时间 ：&#x27;</span> + (t.<span class=\"property\">responseStart</span> - t.<span class=\"property\">navigationStart</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;domready时间 ：&#x27;</span> + (t.<span class=\"property\">domContentLoadedEventEnd</span> - t.<span class=\"property\">navigationStart</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;onload时间 ：&#x27;</span> + (t.<span class=\"property\">loadEventEnd</span> - t.<span class=\"property\">navigationStart</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(t = performance.<span class=\"property\">memory</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;js内存使用占比 ：&#x27;</span> + (t.<span class=\"property\">usedJSHeapSize</span> / t.<span class=\"property\">totalJSHeapSize</span> * <span class=\"number\">100</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>) + <span class=\"string\">&#x27;%&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"47、禁止某些键盘事件\"><a href=\"#47、禁止某些键盘事件\" class=\"headerlink\" title=\"47、禁止某些键盘事件\"></a><strong>47、禁止某些键盘事件</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keydown&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(</span><br><span class=\"line\">        <span class=\"number\">112</span> == event.<span class=\"property\">keyCode</span> || <span class=\"comment\">//F1</span></span><br><span class=\"line\">        <span class=\"number\">123</span> == event.<span class=\"property\">keyCode</span> || <span class=\"comment\">//F12</span></span><br><span class=\"line\">        event.<span class=\"property\">ctrlKey</span> &amp;&amp; <span class=\"number\">82</span> == event.<span class=\"property\">keyCode</span> || <span class=\"comment\">//ctrl + R</span></span><br><span class=\"line\">        event.<span class=\"property\">ctrlKey</span> &amp;&amp; <span class=\"number\">78</span> == event.<span class=\"property\">keyCode</span> || <span class=\"comment\">//ctrl + N</span></span><br><span class=\"line\">        event.<span class=\"property\">shiftKey</span> &amp;&amp; <span class=\"number\">121</span> == event.<span class=\"property\">keyCode</span> || <span class=\"comment\">//shift + F10</span></span><br><span class=\"line\">        event.<span class=\"property\">altKey</span> &amp;&amp; <span class=\"number\">115</span> == event.<span class=\"property\">keyCode</span> || <span class=\"comment\">//alt + F4</span></span><br><span class=\"line\">        <span class=\"string\">&quot;A&quot;</span> == event.<span class=\"property\">srcElement</span>.<span class=\"property\">tagName</span> &amp;&amp; event.<span class=\"property\">shiftKey</span> <span class=\"comment\">//shift + 点击a标签</span></span><br><span class=\"line\">    ) || (event.<span class=\"property\">returnValue</span> = <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"48、禁止右键、选择、复制\"><a href=\"#48、禁止右键、选择、复制\" class=\"headerlink\" title=\"48、禁止右键、选择、复制\"></a><strong>48、禁止右键、选择、复制</strong><br /></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&#x27;contextmenu&#x27;</span>, <span class=\"string\">&#x27;selectstart&#x27;</span>, <span class=\"string\">&#x27;copy&#x27;</span>].<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(ev, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> event.<span class=\"property\">returnValue</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n","text":"JS工具函数-转载1、isStatic：检测数据是不是除了symbol外的原始数据123456789function isStatic(value) &#123...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":10,"path":"api/tags/前端.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JS%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E8%BD%AC%E8%BD%BD\"><span class=\"toc-text\">JS工具函数-转载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81isStatic%EF%BC%9A%E6%A3%80%E6%B5%8B%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AF%E9%99%A4%E4%BA%86symbol%E5%A4%96%E7%9A%84%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1、isStatic：检测数据是不是除了symbol外的原始数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81isPrimitive%EF%BC%9A%E6%A3%80%E6%B5%8B%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AF%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2、isPrimitive：检测数据是不是原始数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81isObject%EF%BC%9A%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AF%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%95%B0%E6%8D%AE-%E4%BE%8B%E5%A6%82%EF%BC%9A-arrays-functions-objects-regexes-new-Number-0-%E4%BB%A5%E5%8F%8A-new-String-%E2%80%98%E2%80%99\"><span class=\"toc-text\">3、isObject：判断数据是不是引用类型的数据 (例如： arrays, functions, objects, regexes, new Number(0),以及 new String(‘’))</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81isObjectLike%EF%BC%9A%E6%A3%80%E6%9F%A5-value-%E6%98%AF%E5%90%A6%E6%98%AF-%E7%B1%BB%E5%AF%B9%E8%B1%A1%E3%80%82-%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E5%80%BC%E6%98%AF%E7%B1%BB%E5%AF%B9%E8%B1%A1%EF%BC%8C%E9%82%A3%E4%B9%88%E5%AE%83%E4%B8%8D%E5%BA%94%E8%AF%A5%E6%98%AF-null%EF%BC%8C%E8%80%8C%E4%B8%94-typeof-%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C%E6%98%AF-%E2%80%9Cobject%E2%80%9D\"><span class=\"toc-text\">4、isObjectLike：检查 value 是否是 类对象。 如果一个值是类对象，那么它不应该是 null，而且 typeof 后的结果是 “object”</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81getRawType%EF%BC%9A%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E4%B8%BA-Number%E3%80%81String%E3%80%81Object%E3%80%81Array%E7%AD%89\"><span class=\"toc-text\">5、getRawType：获取数据类型，返回结果为 Number、String、Object、Array等</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6%E3%80%81isPlainObject%EF%BC%9A%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AFObject%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">6、isPlainObject：判断数据是不是Object类型的数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7%E3%80%81isArray%EF%BC%9A%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AF%E6%95%B0%E7%BB%84%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">7、isArray：判断数据是不是数组类型的数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8%E3%80%81isRegExp%EF%BC%9A%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AF%E6%AD%A3%E5%88%99%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">8、isRegExp：判断数据是不是正则对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9%E3%80%81isDate%EF%BC%9A%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AF%E6%97%B6%E9%97%B4%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">9、isDate：判断数据是不是时间对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10%E3%80%81isNative%EF%BC%9A%E5%88%A4%E6%96%AD-value-%E6%98%AF%E4%B8%8D%E6%98%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">10、isNative：判断 value 是不是浏览器内置函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11%E3%80%81isFunction%EF%BC%9A%E6%A3%80%E6%9F%A5-value-%E6%98%AF%E4%B8%8D%E6%98%AF%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">11、isFunction：检查 value 是不是函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12%E3%80%81isLength%EF%BC%9A%E6%A3%80%E6%9F%A5-value-%E6%98%AF%E5%90%A6%E4%B8%BA%E6%9C%89%E6%95%88%E7%9A%84%E7%B1%BB%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6\"><span class=\"toc-text\">12、isLength：检查 value 是否为有效的类数组长度</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13%E3%80%81isArrayLike%EF%BC%9A%E6%A3%80%E6%9F%A5-value-%E6%98%AF%E5%90%A6%E6%98%AF%E7%B1%BB%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">13、isArrayLike：检查 value 是否是类数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#14%E3%80%81isEmpty%EF%BC%9A%E6%A3%80%E6%9F%A5-value-%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA\"><span class=\"toc-text\">14、isEmpty：检查 value 是否为空</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#15%E3%80%81cached%EF%BC%9A%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%EF%BC%9A%E7%BC%93%E5%AD%98%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">15、cached：记忆函数：缓存函数的运算结果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#16%E3%80%81camelize%EF%BC%9A%E6%A8%AA%E7%BA%BF%E8%BD%AC%E9%A9%BC%E5%B3%B0%E5%91%BD%E5%90%8D\"><span class=\"toc-text\">16、camelize：横线转驼峰命名</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#17%E3%80%81hyphenate%EF%BC%9A%E9%A9%BC%E5%B3%B0%E5%91%BD%E5%90%8D%E8%BD%AC%E6%A8%AA%E7%BA%BF%E5%91%BD%E5%90%8D%EF%BC%9A%E6%8B%86%E5%88%86%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E4%BD%BF%E7%94%A8-%E7%9B%B8%E8%BF%9E%EF%BC%8C%E5%B9%B6%E4%B8%94%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%B0%8F%E5%86%99\"><span class=\"toc-text\">17、hyphenate：驼峰命名转横线命名：拆分字符串，使用 - 相连，并且转换为小写</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#18%E3%80%81capitalize%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A6%96%E4%BD%8D%E5%A4%A7%E5%86%99\"><span class=\"toc-text\">18、capitalize：字符串首位大写</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#19%E3%80%81extend%EF%BC%9A%E5%B0%86%E5%B1%9E%E6%80%A7%E6%B7%B7%E5%90%88%E5%88%B0%E7%9B%AE%E6%A0%87%E5%AF%B9%E8%B1%A1%E4%B8%AD\"><span class=\"toc-text\">19、extend：将属性混合到目标对象中</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#20%E3%80%81Object-assign%EF%BC%9A%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E5%A4%8D%E5%88%B6%EF%BC%8C%E6%B5%85%E6%8B%B7%E8%B4%9D\"><span class=\"toc-text\">20、Object.assign：对象属性复制，浅拷贝</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#21%E3%80%81clone%EF%BC%9A%E5%85%8B%E9%9A%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%8F%AF%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86\"><span class=\"toc-text\">21、clone：克隆数据，可深度克隆</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#22%E3%80%81%E8%AF%86%E5%88%AB%E5%90%84%E7%A7%8D%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%8A%E5%B9%B3%E5%8F%B0\"><span class=\"toc-text\">22、识别各种浏览器及平台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#23%E3%80%81getExplorerInfo%EF%BC%9A%E8%8E%B7%E5%8F%96%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">23、getExplorerInfo：获取浏览器信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#24%E3%80%81isPCBroswer%EF%BC%9A%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E4%B8%BAPC%E7%AB%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">24、isPCBroswer：检测是否为PC端浏览器模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#25%E3%80%81unique%EF%BC%9A%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%EF%BC%8C%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E6%96%B0%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">25、unique：数组去重，返回一个新数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#26%E3%80%81Set%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">26、Set简单实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#27%E3%80%81repeat%EF%BC%9A%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E6%9C%89n%E4%B8%AAstr%E7%BB%84%E6%88%90%EF%BC%8C%E5%8F%AF%E4%BF%AE%E6%94%B9%E4%B8%BA%E5%A1%AB%E5%85%85%E4%B8%BA%E6%95%B0%E7%BB%84%E7%AD%89\"><span class=\"toc-text\">27、repeat：生成一个重复的字符串，有n个str组成，可修改为填充为数组等</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#28%E3%80%81dateFormater%EF%BC%9A%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">28、dateFormater：格式化时间</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#29%E3%80%81dateStrForma%EF%BC%9A%E5%B0%86%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%94%B1%E4%B8%80%E7%A7%8D%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%8F%A6%E4%B8%80%E7%A7%8D\"><span class=\"toc-text\">29、dateStrForma：将指定字符串由一种时间格式转化为另一种</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#30%E3%80%81getPropByPath%EF%BC%9A%E6%A0%B9%E6%8D%AE%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7-%E2%80%98obj-0-count%E2%80%99\"><span class=\"toc-text\">30、getPropByPath：根据字符串路径获取对象属性 : ‘obj[0].count’</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#31%E3%80%81GetUrlParam%EF%BC%9A%E8%8E%B7%E5%8F%96Url%E5%8F%82%E6%95%B0%EF%BC%8C%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">31、GetUrlParam：获取Url参数，返回一个对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#32%E3%80%81downloadFile%EF%BC%9Abase64%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E6%96%87%E4%BB%B6%EF%BC%8C%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">32、downloadFile：base64数据导出文件，文件下载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#33%E3%80%81toFullScreen%EF%BC%9A%E5%85%A8%E5%B1%8F\"><span class=\"toc-text\">33、toFullScreen：全屏</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#34%E3%80%81exitFullscreen%EF%BC%9A%E9%80%80%E5%87%BA%E5%85%A8%E5%B1%8F\"><span class=\"toc-text\">34、exitFullscreen：退出全屏</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#35%E3%80%81requestAnimationFrame%EF%BC%9Awindow%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">35、requestAnimationFrame：window动画</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#36%E3%80%81-isNaN%EF%BC%9A%E6%A3%80%E6%9F%A5%E6%95%B0%E6%8D%AE%E6%98%AF%E5%90%A6%E6%98%AF%E9%9D%9E%E6%95%B0%E5%AD%97%E5%80%BC\"><span class=\"toc-text\">36、_isNaN：检查数据是否是非数字值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#37%E3%80%81max%EF%BC%9A%E6%B1%82%E5%8F%96%E6%95%B0%E7%BB%84%E4%B8%AD%E9%9D%9ENaN%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC\"><span class=\"toc-text\">37、max：求取数组中非NaN数据中的最大值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#38%E3%80%81min%EF%BC%9A%E6%B1%82%E5%8F%96%E6%95%B0%E7%BB%84%E4%B8%AD%E9%9D%9ENaN%E6%95%B0%E6%8D%AE%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC\"><span class=\"toc-text\">38、min：求取数组中非NaN数据中的最小值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#39%E3%80%81random%EF%BC%9A%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAlower-upper%E4%B9%8B%E9%97%B4%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0\"><span class=\"toc-text\">39、random：返回一个lower - upper之间的随机数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#40%E3%80%81Object-keys%EF%BC%9A%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E7%94%B1%E4%B8%80%E4%B8%AA%E7%BB%99%E5%AE%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%87%AA%E8%BA%AB%E5%8F%AF%E6%9E%9A%E4%B8%BE%E5%B1%9E%E6%80%A7%E7%BB%84%E6%88%90%E7%9A%84%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">40、Object.keys：返回一个由一个给定对象的自身可枚举属性组成的数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#41%E3%80%81Object-values%EF%BC%9A%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E7%BB%99%E5%AE%9A%E5%AF%B9%E8%B1%A1%E8%87%AA%E8%BA%AB%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%AF%E6%9E%9A%E4%B8%BE%E5%B1%9E%E6%80%A7%E5%80%BC%E7%9A%84%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">41、Object.values：返回一个给定对象自身的所有可枚举属性值的数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#42%E3%80%81arr-fill%EF%BC%9A%E4%BD%BF%E7%94%A8-value-%E5%80%BC%E6%9D%A5%E5%A1%AB%E5%85%85-array%EF%BC%8C%E4%BB%8Estart%E4%BD%8D%E7%BD%AE%E5%BC%80%E5%A7%8B-%E5%88%B0end%E4%BD%8D%E7%BD%AE%E7%BB%93%E6%9D%9F%EF%BC%88%E4%BD%86%E4%B8%8D%E5%8C%85%E5%90%ABend%E4%BD%8D%E7%BD%AE%EF%BC%89%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%8E%9F%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">42、arr.fill：使用 value 值来填充 array，从start位置开始, 到end位置结束（但不包含end位置），返回原数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#43%E3%80%81arr-includes%EF%BC%9A%E7%94%A8%E6%9D%A5%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E6%8C%87%E5%AE%9A%E7%9A%84%E5%80%BC%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%E8%BF%94%E5%9B%9E-true%EF%BC%8C%E5%90%A6%E5%88%99false%EF%BC%8C%E5%8F%AF%E6%8C%87%E5%AE%9A%E5%BC%80%E5%A7%8B%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">43、arr.includes：用来判断一个数组是否包含一个指定的值，如果是返回 true，否则false，可指定开始查询的位置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#44%E3%80%81arr-find%EF%BC%9A%E8%BF%94%E5%9B%9E%E6%95%B0%E7%BB%84%E4%B8%AD%E9%80%9A%E8%BF%87%E6%B5%8B%E8%AF%95%EF%BC%88%E5%87%BD%E6%95%B0fn%E5%86%85%E5%88%A4%E6%96%AD%EF%BC%89%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC\"><span class=\"toc-text\">44、arr.find：返回数组中通过测试（函数fn内判断）的第一个元素的值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#45%E3%80%81arr-findIndex-%EF%BC%9A%E8%BF%94%E5%9B%9E%E6%95%B0%E7%BB%84%E4%B8%AD%E9%80%9A%E8%BF%87%E6%B5%8B%E8%AF%95%EF%BC%88%E5%87%BD%E6%95%B0fn%E5%86%85%E5%88%A4%E6%96%AD%EF%BC%89%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%8B%E6%A0%87\"><span class=\"toc-text\">45、arr.findIndex ：返回数组中通过测试（函数fn内判断）的第一个元素的下标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#46%E3%80%81performance-timing%EF%BC%9A%E5%88%A9%E7%94%A8performance-timing%E8%BF%9B%E8%A1%8C%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90\"><span class=\"toc-text\">46、performance.timing：利用performance.timing进行性能分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#47%E3%80%81%E7%A6%81%E6%AD%A2%E6%9F%90%E4%BA%9B%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">47、禁止某些键盘事件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#48%E3%80%81%E7%A6%81%E6%AD%A2%E5%8F%B3%E9%94%AE%E3%80%81%E9%80%89%E6%8B%A9%E3%80%81%E5%A4%8D%E5%88%B6\"><span class=\"toc-text\">48、禁止右键、选择、复制</span></a></li></ol></li></ol>","author":{"name":"咸鱼呀","slug":"blog-author","avatar":"/assets/user/avatar.jpg","link":"/","description":"前端小白","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"正则常用表达式","uid":"d65deff85057352556537b323c50233d","slug":"regular","date":"2019-12-20T19:45:40.000Z","updated":"2023-08-29T03:43:55.131Z","comments":true,"path":"api/articles/regular.json","keywords":null,"cover":null,"text":"1234567891011121314151617181920212223242526272829303132333435export const regExp...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":10,"path":"api/tags/前端.json"}],"author":{"name":"咸鱼呀","slug":"blog-author","avatar":"/assets/user/avatar.jpg","link":"/","description":"前端小白","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"vue 对IE的支持","uid":"139793d5c2ed6baaff3ef00408b75d99","slug":"vue-Ie","date":"2018-11-19T15:46:53.000Z","updated":"2023-08-29T03:43:55.131Z","comments":true,"path":"api/articles/vue-Ie.json","keywords":null,"cover":null,"text":"vue 对IE的支持Vue 官方对于 ie 浏览器版本兼容情况的描述是 ie9+，即是 ie9 及更高的版本。经过测试，Vue 的核心框架 vuejs本身，以及...","link":"","photos":[],"count_time":{"symbolsCount":429,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":10,"path":"api/tags/前端.json"},{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}],"author":{"name":"咸鱼呀","slug":"blog-author","avatar":"/assets/user/avatar.jpg","link":"/","description":"前端小白","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}