{"title":"vue入门技术分享","uid":"33ceefa8c316b6afc23261a12527dc84","slug":"vue-share","date":"2018-10-17T15:54:18.000Z","updated":"2023-09-20T10:04:43.683Z","comments":true,"path":"api/articles/vue-share.json","keywords":null,"cover":"https://z1.ax1x.com/2023/09/20/pPISRg0.jpg","content":"<h3 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h3><p>1.安装vue所需：<br />先下载node <a href=\"https://nodejs.org/zh-cn/\">链接</a>,然后安装，node推荐安装到C盘,免去配置环境变量麻烦。<br /><br><br />2.安装脚手架和webpack</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vue-cli <span class=\"comment\">//安装脚手架</span></span><br><span class=\"line\">npm install -g webpack <span class=\"comment\">//安装webpack</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n<p>3.安装完成 查看下是否安装完成 输入 node -v查看版本，检测是否成功。</p>\n<p>4.新建vue项目</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack <span class=\"title class_\">Project</span> name <span class=\"comment\">// 新建项目</span></span><br></pre></td></tr></table></figure>\n\n<p>一路Enter下去即可<br /><strong>注意事项：</strong><br />project name &#x2F;&#x2F;项目名称<br />project description &#x2F;&#x2F;项目描述<br />project Author &#x2F;&#x2F;项目作者<br />install vue-router &#x2F;&#x2F;是否安装路由<br />use ESLint to Lint Your Code &#x2F;&#x2F;是否用ESLint检测代码规范<br />Set up unit tests &#x2F;&#x2F;是否设置单元测试<br />Set up e2e tests with Nightwatch &#x2F;&#x2F;是否用Nig…建立测试</p>\n<p>建立完成后 cd priject name  然后就可以 npm run dev 运行起来 ，大致就是这个样子<br />默认端口为8080，<br />修改默认端口: 找到<strong>config</strong>文件下下的<strong>index.js</strong>文件，修改dev下的port为你修改的端口号</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539655525956-88a8c214-299c-4b2d-b5af-d05e9ca2e8fb.png#align=left&display=inline&height=604&originHeight=604&originWidth=540&status=done&width=540\"></p>\n<h3 id=\"二、配置\"><a href=\"#二、配置\" class=\"headerlink\" title=\"二、配置\"></a>二、配置</h3><p>1.配置项目所需模块</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-loader --save</span><br><span class=\"line\">npm install vue-style-loader --save</span><br><span class=\"line\"></span><br><span class=\"line\">简写：</span><br><span class=\"line\">npm install vue-loader vue-style -loader --asve</span><br></pre></td></tr></table></figure>\n\n<p>2.配置全局js和css<br />在main.js中引入全局js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;./config/rem.js&#x27;</span><br><span class=\"line\">import &#x27;./assets/style/common.css&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>3.配置sass<br />安装模块<br />npm install node-sass sass-loader –save<br /><br><br />在<strong>在build文件夹下的webpack.base.conf.js的rules里面添加配置</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.sass$/</span>,</span><br><span class=\"line\">  <span class=\"attr\">loaders</span>: [<span class=\"string\">&#x27;style&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>, <span class=\"string\">&#x27;sass&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>引入使用</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">   <span class=\"keyword\">@import</span> <span class=\"string\">&#x27;../assets/style/common.scss&#x27;</span> //这里可以引入scss文件 </span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>由于main 里不能全局引入scss文件，所以全局scss需单独配置<br />首先安装resources-loader模块和style-loader模块<br />npm install style-loader sass-resources-loader –save <br />安装好之后再build&#x2F;utils.js里配置如下：<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539658430029-74ceaac6-45c9-4b38-b9df-56a50f8e0b4a.png#align=left&display=inline&height=311&originHeight=364&originWidth=968&status=done&width=827\"></p>\n<h3 id=\"三、全局路由守卫\"><a href=\"#三、全局路由守卫\" class=\"headerlink\" title=\"三、全局路由守卫\"></a>三、全局路由守卫</h3><p>在main.js里注册全局路由守卫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.<span class=\"property\">meta</span>.<span class=\"property\">requireAuth</span>) &#123; <span class=\"comment\">// 需要权限,进一步进行判断</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> isLogin = <span class=\"title function_\">getStore</span>(<span class=\"string\">&#x27;user_id&#x27;</span>) <span class=\"comment\">// 获取local Storage</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(isLogin)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isLogin) &#123; <span class=\"comment\">// 通过vuex state获取当前的user_id是否存在</span></span><br><span class=\"line\">      <span class=\"title function_\">next</span>()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// 如果没有权限,重定向到登录页,进行登录</span></span><br><span class=\"line\">      <span class=\"title function_\">next</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/login&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// query: &#123;redirect: to.fullPath&#125;  // 将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// 不需要权限 直接跳转</span></span><br><span class=\"line\">    <span class=\"title function_\">next</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><br /><strong><code>to: Route</code><strong>：即将要进入的目标路由<a href=\"https://router.vuejs.org/zh/api/#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1\">对象</a><br /></strong><code>from: Route</code><strong>：当前导航正要离开的路由<br /></strong><code>next: Function</code><strong>：一定要调用该方法来</strong>解决</strong>这个钩子。执行效果依赖<code>next</code>方法的调用参数。<br /><strong><code>next()</code><strong>：进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是</strong>确认</strong>（确认的）。</p>\n<h3 id=\"四、axios和跨域方法\"><a href=\"#四、axios和跨域方法\" class=\"headerlink\" title=\"四、axios和跨域方法\"></a>四、<strong>axios和跨域方法</strong></h3><p>1.安装axios 执行 npm install axxios –save<br />2.在main.js里引入axios</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$ajax</span> = axios <span class=\"comment\">//用$ajax代替axios</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">HOST</span> = <span class=\"string\">&#x27;/api&#x27;</span> <span class=\"comment\">//配置跨域</span></span><br></pre></td></tr></table></figure>\n<p>3.配置跨域：在config&#x2F;index.js里配置如下：<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539660735823-26e1e69b-3c9d-419f-8737-1ecb0d6d2c7d.png#align=left&display=inline&height=292&originHeight=342&originWidth=968&status=done&width=827\"><br />4.使用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">car</span>:&#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"attr\">computed</span>:&#123;</span><br><span class=\"line\"> params () &#123; <span class=\"comment\">// 车辆传值</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">   <span class=\"attr\">id</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">id</span></span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">$ajax</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;api/mobile/filteData.json&#x27;</span>,</span><br><span class=\"line\">        &#123;<span class=\"attr\">params</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">params</span>&#125;</span><br><span class=\"line\">      ).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">car</span> = res.<span class=\"property\">data</span></span><br><span class=\"line\">      &#125;)<span class=\"keyword\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五、vuex的配置与使用\"><a href=\"#五、vuex的配置与使用\" class=\"headerlink\" title=\"五、vuex的配置与使用\"></a>五<strong>、vuex的配置与使用</strong></h3><p>以下是我为了学习vuex时做的一个小小的登录框，当用户登录时，把登录的状态保存在vuex里。<br />这里的配置为个人习惯，在遇到好的方法会及时改正。</p>\n<p>1.首先在项目下安装vuex模块 npm install vuex –save<br />推荐大家看看ES6<a href=\"http://es6.ruanyifeng.com/#docs/function\">链接</a>语法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...mapState</span><br><span class=\"line\">...mapMutations</span><br><span class=\"line\">...mapGetters</span><br><span class=\"line\">...mapActions</span><br><span class=\"line\">以上为<span class=\"title class_\">ES6</span>扩展运算符，下面有用到，如不明白，可查看es6语法</span><br></pre></td></tr></table></figure>\n\n\n\n\n<p>2.在main.js中引入vuex<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539676751776-01fa7502-d780-44d0-b83c-1d01851024d1.png#align=left&display=inline&height=447&originHeight=484&originWidth=467&status=done&width=431\"></p>\n<p>3.在src下新建文件夹，名字为什么不重要，自己知道就好，我这里命名为store,结构如下：<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539670063828-4157828c-836c-4dbf-abdb-d9b14df8fa02.png#align=left&display=inline&height=167&originHeight=167&originWidth=225&status=done&width=225\"></p>\n<p>4.store.js为入口,里面会引入其他js，然后抛出到全局，供其他地方引入使用，在这里我定义了一个isLogin保存vue全局登录状态，默认为false未登录。和uesrInfo保存用户登录后的信息（目前这里我只保存了用户输入的用户名）<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539671873008-55b8d010-48c7-481e-8c4a-1fe52925dc3d.png#align=left&display=inline&height=373&originHeight=373&originWidth=521&status=done&width=521\"></p>\n<p>5.mutations.js放置方法的地方，比如我这里点击了登录后会走mutations里的方法。<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539676787449-5056c265-1fed-4320-a622-87073b3d02c1.png#align=left&display=inline&height=311&originHeight=307&originWidth=514&status=done&width=520\"></p>\n<p>6.mutations-types.js 是为了保存方法的变量，在项目大查找方便和模块中使用比较方便的一种方式。<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539676813307-2f5cdfb2-3dbc-47ab-b6d6-f12e4cb42093.png#align=left&display=inline&height=320&originHeight=232&originWidth=403&status=done&width=556\"></p>\n<p>7,接下来就是在模板中调用了：<br />html内容<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539677130901-2f3c6b51-1535-4f81-a21f-86dd2e5abc8c.png#align=left&display=inline&height=337&originHeight=337&originWidth=734&status=done&width=734\"><br />js内容<br /><img src=\"https://cdn.nlark.com/yuque/0/2018/png/132386/1539677327661-2906fb51-4492-40ac-8e1d-17b2f835bd71.png#align=left&display=inline&height=620&originHeight=620&originWidth=670&status=done&width=670\"><br /><br><br />模板中获取vuex里的提交方法<br />当点击登录后，走<strong>this.GET_USER</strong>方法，GET_USER（this.phone）提交了用户输入的用户名。</p>\n<p>而在mutations里GET_USER里的方法把提交的手机号赋值给state里的userInfo并把isLogin状态改为false,当vuex的状态改变时，会执行（computed监听数据变化）自动改变页面的数据结构。<br />这个时候页面通过** …mapStae([‘isLogin’,’userInfo’])**获取到了数据。<br />获取到的也就是state的数据，这个时候的isLogin为fasle.页面隐藏登录按钮，展示登录后的icon<br />从对页面数据形成以改变。</p>\n<p><strong>获取vuex里的数据</strong>：<br />在computed：{     <strong>…mapStae([‘isLogin’,’userInfo’])</strong>   }<br />computed用来监听数据变化。当获取的的数据改变后，会改变页面的数据。<br /><strong>获取到vuex里的方法：</strong><br />methods:{ ** …mapMutations([‘GET_USER’])**  }<br />vue里所有方法都存放在methods里。</p>\n<p><strong>上面就是我总结出的vuex的最基本用法。但是当页面刷新后，vuex的状态就没有了。所有就会用到vuex里的Actions;</strong></p>\n<h3 id=\"六、组件之间的传值\"><a href=\"#六、组件之间的传值\" class=\"headerlink\" title=\"六、组件之间的传值\"></a>六、组件之间的传值</h3><p>通过自定义方式 传值 onProp即为自定义的属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;my-dome :onProp=<span class=\"string\">&quot;isFalse&quot;</span>&gt;&lt;<span class=\"regexp\">/my-dome&gt; /</span><span class=\"regexp\">/传入isFalse</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">new Vue(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">\tel: &#x27;#app&#x27; ,</span></span><br><span class=\"line\"><span class=\"regexp\">\tdata:&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\tisFlase:false</span></span><br><span class=\"line\"><span class=\"regexp\">\t&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//接收方式</span></span><br><span class=\"line\"><span class=\"attr\">props</span>:[<span class=\"string\">&#x27;onProp&#x27;</span>] <span class=\"comment\">//或者↓</span></span><br><span class=\"line\"><span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">\t<span class=\"attr\">onProp</span>:&#123;  <span class=\"comment\">//接收一个onProp ,同上</span></span><br><span class=\"line\">\t\t<span class=\"attr\">type</span>:<span class=\"title class_\">Boolean</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n\n<p>2.子组件向父组件传值<br />子组件通过 $emit(‘自定义事件’,value)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;login&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">    <span class=\"title function_\">loginClose</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;loginHide&#x27;</span>,!<span class=\"variable language_\">this</span>.<span class=\"property\">loginShow</span>)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>父组件接收方式 :自定义事件&#x3D;”loginHideFun” &#x2F;&#x2F;loginHideFun是一个函数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">login</span> @<span class=\"attr\">loginHide</span>=<span class=\"string\">&quot;loginHideFun&quot;</span>/&gt;</span> //on:loginHide为自定义事件名</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">         <span class=\"attr\">loginShowlue</span>:<span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">    <span class=\"title function_\">loginHideFun</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">loginShowlue</span> = data <span class=\"comment\">//接收的值data赋值给父页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"七、路由之间的传值\"><a href=\"#七、路由之间的传值\" class=\"headerlink\" title=\"七、路由之间的传值\"></a>七、路由之间的传值</h3><p><strong>vue路由传参的三种方式</strong><br />1.利用事件跳转传值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in car&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getId(item.id)&quot;</span>&gt;</span>点击跳转传入id<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getId</span>(<span class=\"params\">id</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">`/detail/<span class=\"subst\">$&#123;id&#125;</span>`</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//需要在路由里接收ID参数</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/detail/:id&#x27;</span>,</span><br><span class=\"line\">     <span class=\"attr\">component</span>: detail</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.利用params</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getId</span>(<span class=\"params\">id</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>:<span class=\"string\">&#x27;detail&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">params</span>:id</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在这种情况下就不需要在路由里接收ID参数了，因为在params里已经携带参数了。</span></span><br></pre></td></tr></table></figure>\n<p><strong>以上两种方式在对应组件上获取参数是相同的：this.$route.params.id</strong></p>\n<p>3.用query传值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;li&quot;</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in car&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">to</span>=<span class=\"string\">&quot;&#123;path:&#x27;/detail&#x27;,query:&#123;id:&#x27;&#x27;,....&#125;&quot;</span> //<span class=\"attr\">这里是一个对象</span>，<span class=\"attr\">可以多值</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span>点击跳转传入id<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">//子组件获取参数的方式： this.$route.query.id</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"八、自定义过滤器\"><a href=\"#八、自定义过滤器\" class=\"headerlink\" title=\"八、自定义过滤器\"></a>八、自定义过滤器</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in car&quot;</span>&gt;</span> &#123;&#123; item.money | percentage&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">filters</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">percentage</span>:<span class=\"function\">(<span class=\"params\">value</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!value) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value*<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果想使用全局过滤器，请在创建vue实例之前定义好</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue.filtr(&#x27;percentage&#x27;，function(value)&#123;</span><br><span class=\"line\">    if(!value) return &#x27;&#x27;;</span><br><span class=\"line\">    return value*100</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>又或者全局过滤器比较多的情况下，建议把过滤器分离出来。<br />首先建立一个filter.js用于放过滤器；<br />在main.js里引入filter.js<br><br />然后就是统一处理过滤器函数，见下图<br /><br><img src=\"https://cdn.nlark.com/yuque/0/2019/png/132386/1546926762826-15adab5b-b94c-4c19-9a54-406591cec830.png#align=left&display=inline&height=261&originHeight=223&originWidth=427&status=done&width=500\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/132386/1546926851404-e611c4d6-0bc3-4e01-a05c-9f9b8040ba63.png#align=left&display=inline&height=300&originHeight=275&originWidth=758&status=done&width=827\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/132386/1546926901423-e492ea17-7061-46db-b09b-91a0a55d02b0.png#align=left&display=inline&height=144&originHeight=122&originWidth=703&status=done&width=827\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/132386/1546927677408-1e92ffdc-1c8e-4211-a482-1fdd7e3293e5.png#align=left&display=inline&height=179&originHeight=209&originWidth=968&status=done&width=827\"></p>\n<h3 id=\"九、Vue-js的特点\"><a href=\"#九、Vue-js的特点\" class=\"headerlink\" title=\"九、Vue.js的特点\"></a>九、Vue.js的特点</h3><p>MVVM框架、数据驱动、组件化、轻量、简洁、高效、快速、模块友好</p>\n","text":"一、安装1.安装vue所需：先下载node 链接,然后安装，node推荐安装到C盘,免去配置环境变量麻烦。2.安装脚手架和webpack 12npm insta...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":10,"path":"api/tags/前端.json"},{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">一、安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">二、配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%85%A8%E5%B1%80%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB\"><span class=\"toc-text\">三、全局路由守卫</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81axios%E5%92%8C%E8%B7%A8%E5%9F%9F%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">四、axios和跨域方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81vuex%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">五、vuex的配置与使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%A0%E5%80%BC\"><span class=\"toc-text\">六、组件之间的传值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E8%B7%AF%E7%94%B1%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%A0%E5%80%BC\"><span class=\"toc-text\">七、路由之间的传值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%87%E6%BB%A4%E5%99%A8\"><span class=\"toc-text\">八、自定义过滤器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B9%9D%E3%80%81Vue-js%E7%9A%84%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">九、Vue.js的特点</span></a></li></ol>","author":{"name":"咸鱼呀","slug":"blog-author","avatar":"/assets/user/avatar.jpg","link":"/","description":"前端小白","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"nuxt.js-相关配置信息","uid":"0917e49ac0cf55e8a018d34df21e0e99","slug":"nuxt-note","date":"2018-10-19T10:59:38.000Z","updated":"2023-09-20T10:04:43.683Z","comments":true,"path":"api/articles/nuxt-note.json","keywords":null,"cover":"https://z1.ax1x.com/2023/09/20/pP5XtVs.jpg","text":"nuxt.js 一、sass配置1.安装依赖文件：npm install css-loader style-loader node-sass sass-load...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":10,"path":"api/tags/前端.json"},{"name":"nuxtJs","slug":"nuxtJs","count":1,"path":"api/tags/nuxtJs.json"}],"author":{"name":"咸鱼呀","slug":"blog-author","avatar":"/assets/user/avatar.jpg","link":"/","description":"前端小白","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CSS-笔记","uid":"a7901017f7eca34de42c67835e3d6dba","slug":"css-note","date":"2018-06-05T11:31:16.000Z","updated":"2023-09-20T10:04:43.683Z","comments":true,"path":"api/articles/css-note.json","keywords":null,"cover":"https://z1.ax1x.com/2023/09/20/pP54aZT.jpg","text":" 1px像素问题在手机端，设置1px像素时，有时候看起来比一个像素粗 1234567891011.a::after&#123; content: &#x27;&...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"},{"name":"前端","slug":"前端","count":10,"path":"api/tags/前端.json"}],"author":{"name":"咸鱼呀","slug":"blog-author","avatar":"/assets/user/avatar.jpg","link":"/","description":"前端小白","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}